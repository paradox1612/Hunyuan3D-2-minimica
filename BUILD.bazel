load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")

# Create a simple tar with all files
genrule(
    name = "app_files",
    srcs = glob([
        "*.py",
        "requirements.txt",
        "assets/**/*",
        "hy3dgen/**/*",
    ], exclude = [
        "**/*.pyc",
        "**/__pycache__/**",
    ]),
    outs = ["app.tar"],
    cmd = """
        mkdir -p app
        cp -r $(SRCS) app/ || true
        find app -name "*.py" -exec cp {} app/ \;
        tar -cf $@ app/
    """,
)

# Docker container image using OCI
oci_image(
    name = "hunyuan3d_image",
    base = "@cuda_base",
    tars = [":app_files"],
    entrypoint = ["python3", "generate_mv_enhanced.py"],
    exposed_ports = ["8000"],
    workdir = "/app",
    env = {
        "HY3DGEN_MODELS": "/app/model-cache",
        "PYTHONPATH": "/app",
    },
)

# Create tarball for loading into Docker
oci_tarball(
    name = "hunyuan3d_tarball",
    image = ":hunyuan3d_image",
    repo_tags = ["hunyuan3d:latest"],
)

# Build aliases for convenience
alias(
    name = "build",
    actual = ":hunyuan3d_image",
)